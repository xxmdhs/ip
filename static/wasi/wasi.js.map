{"version":3,"sources":["../src/wasi.ts"],"sourcesContent":["import * as wasi from \"./wasi_defs.js\";\nimport { Fd } from \"./fd.js\";\nimport { debug } from \"./debug.js\";\n\nexport interface Options {\n  debug?: boolean;\n}\n\n/**\n * An exception that is thrown when the process exits.\n **/\nexport class WASIProcExit extends Error {\n  constructor(public readonly code: number) {\n    super(\"exit with exit code \" + code);\n  }\n}\n\nexport default class WASI {\n  args: Array<string> = [];\n  env: Array<string> = [];\n  fds: Array<Fd> = [];\n  inst: { exports: { memory: WebAssembly.Memory } };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wasiImport: { [key: string]: (...args: Array<any>) => unknown };\n\n  /// Start a WASI command\n  start(instance: {\n    // FIXME v0.3: close opened Fds after execution\n    exports: { memory: WebAssembly.Memory; _start: () => unknown };\n  }) {\n    this.inst = instance;\n    try {\n      instance.exports._start();\n      return 0;\n    } catch (e) {\n      if (e instanceof WASIProcExit) {\n        return e.code;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /// Initialize a WASI reactor\n  initialize(instance: {\n    exports: { memory: WebAssembly.Memory; _initialize?: () => unknown };\n  }) {\n    this.inst = instance;\n    if (instance.exports._initialize) {\n      instance.exports._initialize();\n    }\n  }\n\n  constructor(\n    args: Array<string>,\n    env: Array<string>,\n    fds: Array<Fd>,\n    options: Options = {},\n  ) {\n    debug.enable(options.debug);\n\n    this.args = args;\n    this.env = env;\n    this.fds = fds;\n    const self = this;\n    this.wasiImport = {\n      args_sizes_get(argc: number, argv_buf_size: number): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        buffer.setUint32(argc, self.args.length, true);\n        let buf_size = 0;\n        for (const arg of self.args) {\n          buf_size += arg.length + 1;\n        }\n        buffer.setUint32(argv_buf_size, buf_size, true);\n        debug.log(\n          buffer.getUint32(argc, true),\n          buffer.getUint32(argv_buf_size, true),\n        );\n        return 0;\n      },\n      args_get(argv: number, argv_buf: number): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        const orig_argv_buf = argv_buf;\n        for (let i = 0; i < self.args.length; i++) {\n          buffer.setUint32(argv, argv_buf, true);\n          argv += 4;\n          const arg = new TextEncoder().encode(self.args[i]);\n          buffer8.set(arg, argv_buf);\n          buffer.setUint8(argv_buf + arg.length, 0);\n          argv_buf += arg.length + 1;\n        }\n        if (debug.enabled) {\n          debug.log(\n            new TextDecoder(\"utf-8\").decode(\n              buffer8.slice(orig_argv_buf, argv_buf),\n            ),\n          );\n        }\n        return 0;\n      },\n\n      environ_sizes_get(environ_count: number, environ_size: number): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        buffer.setUint32(environ_count, self.env.length, true);\n        let buf_size = 0;\n        for (const environ of self.env) {\n          buf_size += environ.length + 1;\n        }\n        buffer.setUint32(environ_size, buf_size, true);\n        debug.log(\n          buffer.getUint32(environ_count, true),\n          buffer.getUint32(environ_size, true),\n        );\n        return 0;\n      },\n      environ_get(environ: number, environ_buf: number): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        const orig_environ_buf = environ_buf;\n        for (let i = 0; i < self.env.length; i++) {\n          buffer.setUint32(environ, environ_buf, true);\n          environ += 4;\n          const e = new TextEncoder().encode(self.env[i]);\n          buffer8.set(e, environ_buf);\n          buffer.setUint8(environ_buf + e.length, 0);\n          environ_buf += e.length + 1;\n        }\n        if (debug.enabled) {\n          debug.log(\n            new TextDecoder(\"utf-8\").decode(\n              buffer8.slice(orig_environ_buf, environ_buf),\n            ),\n          );\n        }\n        return 0;\n      },\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      clock_res_get(id: number, res_ptr: number): number {\n        let resolutionValue: bigint;\n        switch (id) {\n          case wasi.CLOCKID_MONOTONIC: {\n            // https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n            // > Resolution in isolated contexts: 5 microseconds\n            resolutionValue = 5_000n; // 5 microseconds\n            break;\n          }\n          case wasi.CLOCKID_REALTIME: {\n            resolutionValue = 1_000_000n; // 1 millisecond?\n            break;\n          }\n          default:\n            return wasi.ERRNO_NOSYS;\n        }\n        const view = new DataView(self.inst.exports.memory.buffer);\n        view.setBigUint64(res_ptr, resolutionValue, true);\n        return wasi.ERRNO_SUCCESS;\n      },\n      clock_time_get(id: number, precision: bigint, time: number): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        if (id === wasi.CLOCKID_REALTIME) {\n          buffer.setBigUint64(\n            time,\n            BigInt(new Date().getTime()) * 1_000_000n,\n            true,\n          );\n        } else if (id == wasi.CLOCKID_MONOTONIC) {\n          let monotonic_time: bigint;\n          try {\n            monotonic_time = BigInt(Math.round(performance.now() * 1000000));\n          } catch (e) {\n            // performance.now() is only available in browsers.\n            // TODO use the perf_hooks builtin module for NodeJS\n            monotonic_time = 0n;\n          }\n          buffer.setBigUint64(time, monotonic_time, true);\n        } else {\n          // TODO\n          buffer.setBigUint64(time, 0n, true);\n        }\n        return 0;\n      },\n\n      fd_advise(\n        fd: number,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        offset: bigint,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        len: bigint,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        advice: number,\n      ): number {\n        if (self.fds[fd] != undefined) {\n          return wasi.ERRNO_SUCCESS;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_allocate(fd: number, offset: bigint, len: bigint): number {\n        if (self.fds[fd] != undefined) {\n          return self.fds[fd].fd_allocate(offset, len);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_close(fd: number): number {\n        if (self.fds[fd] != undefined) {\n          const ret = self.fds[fd].fd_close();\n          self.fds[fd] = undefined;\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_datasync(fd: number): number {\n        if (self.fds[fd] != undefined) {\n          return self.fds[fd].fd_sync();\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_fdstat_get(fd: number, fdstat_ptr: number): number {\n        if (self.fds[fd] != undefined) {\n          const { ret, fdstat } = self.fds[fd].fd_fdstat_get();\n          if (fdstat != null) {\n            fdstat.write_bytes(\n              new DataView(self.inst.exports.memory.buffer),\n              fdstat_ptr,\n            );\n          }\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_fdstat_set_flags(fd: number, flags: number): number {\n        if (self.fds[fd] != undefined) {\n          return self.fds[fd].fd_fdstat_set_flags(flags);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_fdstat_set_rights(\n        fd: number,\n        fs_rights_base: bigint,\n        fs_rights_inheriting: bigint,\n      ): number {\n        if (self.fds[fd] != undefined) {\n          return self.fds[fd].fd_fdstat_set_rights(\n            fs_rights_base,\n            fs_rights_inheriting,\n          );\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_filestat_get(fd: number, filestat_ptr: number): number {\n        if (self.fds[fd] != undefined) {\n          const { ret, filestat } = self.fds[fd].fd_filestat_get();\n          if (filestat != null) {\n            filestat.write_bytes(\n              new DataView(self.inst.exports.memory.buffer),\n              filestat_ptr,\n            );\n          }\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_filestat_set_size(fd: number, size: bigint): number {\n        if (self.fds[fd] != undefined) {\n          return self.fds[fd].fd_filestat_set_size(size);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_filestat_set_times(\n        fd: number,\n        atim: bigint,\n        mtim: bigint,\n        fst_flags: number,\n      ): number {\n        if (self.fds[fd] != undefined) {\n          return self.fds[fd].fd_filestat_set_times(atim, mtim, fst_flags);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_pread(\n        fd: number,\n        iovs_ptr: number,\n        iovs_len: number,\n        offset: bigint,\n        nread_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const iovecs = wasi.Iovec.read_bytes_array(\n            buffer,\n            iovs_ptr,\n            iovs_len,\n          );\n          let nread = 0;\n          for (const iovec of iovecs) {\n            const { ret, data } = self.fds[fd].fd_pread(iovec.buf_len, offset);\n            if (ret != wasi.ERRNO_SUCCESS) {\n              buffer.setUint32(nread_ptr, nread, true);\n              return ret;\n            }\n            buffer8.set(data, iovec.buf);\n            nread += data.length;\n            offset += BigInt(data.length);\n            if (data.length != iovec.buf_len) {\n              break;\n            }\n          }\n          buffer.setUint32(nread_ptr, nread, true);\n          return wasi.ERRNO_SUCCESS;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_prestat_get(fd: number, buf_ptr: number): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const { ret, prestat } = self.fds[fd].fd_prestat_get();\n          if (prestat != null) {\n            prestat.write_bytes(buffer, buf_ptr);\n          }\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n\n      fd_prestat_dir_name(\n        fd: number,\n        path_ptr: number,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        path_len: number,\n      ): number {\n        // FIXME don't ignore path_len\n        if (self.fds[fd] != undefined) {\n          const { ret, prestat } = self.fds[fd].fd_prestat_get();\n          if (prestat == null) {\n            return ret;\n          }\n          const prestat_dir_name = prestat.inner.pr_name;\n\n          const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n          buffer8.set(prestat_dir_name.slice(0, path_len), path_ptr);\n\n          return prestat_dir_name.byteLength > path_len\n            ? wasi.ERRNO_NAMETOOLONG\n            : wasi.ERRNO_SUCCESS;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_pwrite(\n        fd: number,\n        iovs_ptr: number,\n        iovs_len: number,\n        offset: bigint,\n        nwritten_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const iovecs = wasi.Ciovec.read_bytes_array(\n            buffer,\n            iovs_ptr,\n            iovs_len,\n          );\n          let nwritten = 0;\n          for (const iovec of iovecs) {\n            const data = buffer8.slice(iovec.buf, iovec.buf + iovec.buf_len);\n            const { ret, nwritten: nwritten_part } = self.fds[fd].fd_pwrite(\n              data,\n              offset,\n            );\n            if (ret != wasi.ERRNO_SUCCESS) {\n              buffer.setUint32(nwritten_ptr, nwritten, true);\n              return ret;\n            }\n            nwritten += nwritten_part;\n            offset += BigInt(nwritten_part);\n            if (nwritten_part != data.byteLength) {\n              break;\n            }\n          }\n          buffer.setUint32(nwritten_ptr, nwritten, true);\n          return wasi.ERRNO_SUCCESS;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_read(\n        fd: number,\n        iovs_ptr: number,\n        iovs_len: number,\n        nread_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const iovecs = wasi.Iovec.read_bytes_array(\n            buffer,\n            iovs_ptr,\n            iovs_len,\n          );\n          let nread = 0;\n          for (const iovec of iovecs) {\n            const { ret, data } = self.fds[fd].fd_read(iovec.buf_len);\n            if (ret != wasi.ERRNO_SUCCESS) {\n              buffer.setUint32(nread_ptr, nread, true);\n              return ret;\n            }\n            buffer8.set(data, iovec.buf);\n            nread += data.length;\n            if (data.length != iovec.buf_len) {\n              break;\n            }\n          }\n          buffer.setUint32(nread_ptr, nread, true);\n          return wasi.ERRNO_SUCCESS;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_readdir(\n        fd: number,\n        buf: number,\n        buf_len: number,\n        cookie: bigint,\n        bufused_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          let bufused = 0;\n\n          // eslint-disable-next-line no-constant-condition\n          while (true) {\n            const { ret, dirent } = self.fds[fd].fd_readdir_single(cookie);\n            if (ret != 0) {\n              buffer.setUint32(bufused_ptr, bufused, true);\n              return ret;\n            }\n            if (dirent == null) {\n              break;\n            }\n\n            if (buf_len - bufused < dirent.head_length()) {\n              bufused = buf_len;\n              break;\n            }\n\n            const head_bytes = new ArrayBuffer(dirent.head_length());\n            dirent.write_head_bytes(new DataView(head_bytes), 0);\n            buffer8.set(\n              new Uint8Array(head_bytes).slice(\n                0,\n                Math.min(head_bytes.byteLength, buf_len - bufused),\n              ),\n              buf,\n            );\n            buf += dirent.head_length();\n            bufused += dirent.head_length();\n\n            if (buf_len - bufused < dirent.name_length()) {\n              bufused = buf_len;\n              break;\n            }\n\n            dirent.write_name_bytes(buffer8, buf, buf_len - bufused);\n            buf += dirent.name_length();\n            bufused += dirent.name_length();\n\n            cookie = dirent.d_next;\n          }\n\n          buffer.setUint32(bufused_ptr, bufused, true);\n          return 0;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_renumber(fd: number, to: number) {\n        if (self.fds[fd] != undefined && self.fds[to] != undefined) {\n          const ret = self.fds[to].fd_close();\n          if (ret != 0) {\n            return ret;\n          }\n          self.fds[to] = self.fds[fd];\n          self.fds[fd] = undefined;\n          return 0;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_seek(\n        fd: number,\n        offset: bigint,\n        whence: number,\n        offset_out_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const { ret, offset: offset_out } = self.fds[fd].fd_seek(\n            offset,\n            whence,\n          );\n          buffer.setBigInt64(offset_out_ptr, offset_out, true);\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_sync(fd: number): number {\n        if (self.fds[fd] != undefined) {\n          return self.fds[fd].fd_sync();\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_tell(fd: number, offset_ptr: number): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const { ret, offset } = self.fds[fd].fd_tell();\n          buffer.setBigUint64(offset_ptr, offset, true);\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      fd_write(\n        fd: number,\n        iovs_ptr: number,\n        iovs_len: number,\n        nwritten_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const iovecs = wasi.Ciovec.read_bytes_array(\n            buffer,\n            iovs_ptr,\n            iovs_len,\n          );\n          let nwritten = 0;\n          for (const iovec of iovecs) {\n            const data = buffer8.slice(iovec.buf, iovec.buf + iovec.buf_len);\n            const { ret, nwritten: nwritten_part } =\n              self.fds[fd].fd_write(data);\n            if (ret != wasi.ERRNO_SUCCESS) {\n              buffer.setUint32(nwritten_ptr, nwritten, true);\n              return ret;\n            }\n            nwritten += nwritten_part;\n            if (nwritten_part != data.byteLength) {\n              break;\n            }\n          }\n          buffer.setUint32(nwritten_ptr, nwritten, true);\n          return wasi.ERRNO_SUCCESS;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_create_directory(\n        fd: number,\n        path_ptr: number,\n        path_len: number,\n      ): number {\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(path_ptr, path_ptr + path_len),\n          );\n          return self.fds[fd].path_create_directory(path);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_filestat_get(\n        fd: number,\n        flags: number,\n        path_ptr: number,\n        path_len: number,\n        filestat_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(path_ptr, path_ptr + path_len),\n          );\n          const { ret, filestat } = self.fds[fd].path_filestat_get(flags, path);\n          if (filestat != null) {\n            filestat.write_bytes(buffer, filestat_ptr);\n          }\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_filestat_set_times(\n        fd: number,\n        flags: number,\n        path_ptr: number,\n        path_len: number,\n        atim: bigint,\n        mtim: bigint,\n        fst_flags: number,\n      ) {\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(path_ptr, path_ptr + path_len),\n          );\n          return self.fds[fd].path_filestat_set_times(\n            flags,\n            path,\n            atim,\n            mtim,\n            fst_flags,\n          );\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_link(\n        old_fd: number,\n        old_flags,\n        old_path_ptr: number,\n        old_path_len: number,\n        new_fd: number,\n        new_path_ptr: number,\n        new_path_len: number,\n      ): number {\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[old_fd] != undefined && self.fds[new_fd] != undefined) {\n          const old_path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(old_path_ptr, old_path_ptr + old_path_len),\n          );\n          const new_path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(new_path_ptr, new_path_ptr + new_path_len),\n          );\n          const { ret, inode_obj } = self.fds[old_fd].path_lookup(\n            old_path,\n            old_flags,\n          );\n          if (inode_obj == null) {\n            return ret;\n          }\n          return self.fds[new_fd].path_link(new_path, inode_obj, false);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_open(\n        fd: number,\n        dirflags,\n        path_ptr: number,\n        path_len: number,\n        oflags,\n        fs_rights_base,\n        fs_rights_inheriting,\n        fd_flags,\n        opened_fd_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(path_ptr, path_ptr + path_len),\n          );\n          debug.log(path);\n          const { ret, fd_obj } = self.fds[fd].path_open(\n            dirflags,\n            path,\n            oflags,\n            fs_rights_base,\n            fs_rights_inheriting,\n            fd_flags,\n          );\n          if (ret != 0) {\n            return ret;\n          }\n          // FIXME use first free fd\n          self.fds.push(fd_obj);\n          const opened_fd = self.fds.length - 1;\n          buffer.setUint32(opened_fd_ptr, opened_fd, true);\n          return 0;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_readlink(\n        fd: number,\n        path_ptr: number,\n        path_len: number,\n        buf_ptr: number,\n        buf_len: number,\n        nread_ptr: number,\n      ): number {\n        const buffer = new DataView(self.inst.exports.memory.buffer);\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(path_ptr, path_ptr + path_len),\n          );\n          debug.log(path);\n          const { ret, data } = self.fds[fd].path_readlink(path);\n          if (data != null) {\n            const data_buf = new TextEncoder().encode(data);\n            if (data_buf.length > buf_len) {\n              buffer.setUint32(nread_ptr, 0, true);\n              return wasi.ERRNO_BADF;\n            }\n            buffer8.set(data_buf, buf_ptr);\n            buffer.setUint32(nread_ptr, data_buf.length, true);\n          }\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_remove_directory(\n        fd: number,\n        path_ptr: number,\n        path_len: number,\n      ): number {\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(path_ptr, path_ptr + path_len),\n          );\n          return self.fds[fd].path_remove_directory(path);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_rename(\n        fd: number,\n        old_path_ptr: number,\n        old_path_len: number,\n        new_fd: number,\n        new_path_ptr: number,\n        new_path_len: number,\n      ): number {\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined && self.fds[new_fd] != undefined) {\n          const old_path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(old_path_ptr, old_path_ptr + old_path_len),\n          );\n          const new_path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(new_path_ptr, new_path_ptr + new_path_len),\n          );\n          // eslint-disable-next-line prefer-const\n          let { ret, inode_obj } = self.fds[fd].path_unlink(old_path);\n          if (inode_obj == null) {\n            return ret;\n          }\n          ret = self.fds[new_fd].path_link(new_path, inode_obj, true);\n          if (ret != wasi.ERRNO_SUCCESS) {\n            if (\n              self.fds[fd].path_link(old_path, inode_obj, true) !=\n              wasi.ERRNO_SUCCESS\n            ) {\n              throw \"path_link should always return success when relinking an inode back to the original place\";\n            }\n          }\n          return ret;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_symlink(\n        old_path_ptr: number,\n        old_path_len: number,\n        fd: number,\n        new_path_ptr: number,\n        new_path_len: number,\n      ): number {\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const old_path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(old_path_ptr, old_path_ptr + old_path_len),\n          );\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const new_path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(new_path_ptr, new_path_ptr + new_path_len),\n          );\n          return wasi.ERRNO_NOTSUP;\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      path_unlink_file(fd: number, path_ptr: number, path_len: number): number {\n        const buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n        if (self.fds[fd] != undefined) {\n          const path = new TextDecoder(\"utf-8\").decode(\n            buffer8.slice(path_ptr, path_ptr + path_len),\n          );\n          return self.fds[fd].path_unlink_file(path);\n        } else {\n          return wasi.ERRNO_BADF;\n        }\n      },\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      poll_oneoff(in_, out, nsubscriptions) {\n        throw \"async io not supported\";\n      },\n      proc_exit(exit_code: number) {\n        throw new WASIProcExit(exit_code);\n      },\n      proc_raise(sig: number) {\n        throw \"raised signal \" + sig;\n      },\n      sched_yield() {},\n      random_get(buf: number, buf_len: number) {\n        const buffer8 = new Uint8Array(\n          self.inst.exports.memory.buffer,\n        ).subarray(buf, buf + buf_len);\n\n        if (\n          \"crypto\" in globalThis &&\n          (typeof SharedArrayBuffer === \"undefined\" ||\n            !(self.inst.exports.memory.buffer instanceof SharedArrayBuffer))\n        ) {\n          for (let i = 0; i < buf_len; i += 65536) {\n            crypto.getRandomValues(buffer8.subarray(i, i + 65536));\n          }\n        } else {\n          for (let i = 0; i < buf_len; i++) {\n            buffer8[i] = (Math.random() * 256) | 0;\n          }\n        }\n      },\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      sock_recv(fd: number, ri_data, ri_flags) {\n        throw \"sockets not supported\";\n      },\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      sock_send(fd: number, si_data, si_flags) {\n        throw \"sockets not supported\";\n      },\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      sock_shutdown(fd: number, how) {\n        throw \"sockets not supported\";\n      },\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      sock_accept(fd: number, flags) {\n        throw \"sockets not supported\";\n      },\n    };\n  }\n}\n"],"names":["wasi","debug","WASIProcExit","Error","constructor","code","WASI","start","instance","inst","exports","_start","e","initialize","_initialize","args","env","fds","options","enable","self","wasiImport","args_sizes_get","argc","argv_buf_size","buffer","DataView","memory","setUint32","length","buf_size","arg","log","getUint32","args_get","argv","argv_buf","buffer8","Uint8Array","orig_argv_buf","i","TextEncoder","encode","set","setUint8","enabled","TextDecoder","decode","slice","environ_sizes_get","environ_count","environ_size","environ","environ_get","environ_buf","orig_environ_buf","clock_res_get","id","res_ptr","resolutionValue","CLOCKID_MONOTONIC","CLOCKID_REALTIME","ERRNO_NOSYS","view","setBigUint64","ERRNO_SUCCESS","clock_time_get","precision","time","BigInt","Date","getTime","monotonic_time","Math","round","performance","now","fd_advise","fd","offset","len","advice","undefined","ERRNO_BADF","fd_allocate","fd_close","ret","fd_datasync","fd_sync","fd_fdstat_get","fdstat_ptr","fdstat","write_bytes","fd_fdstat_set_flags","flags","fd_fdstat_set_rights","fs_rights_base","fs_rights_inheriting","fd_filestat_get","filestat_ptr","filestat","fd_filestat_set_size","size","fd_filestat_set_times","atim","mtim","fst_flags","fd_pread","iovs_ptr","iovs_len","nread_ptr","iovecs","Iovec","read_bytes_array","nread","iovec","data","buf_len","buf","fd_prestat_get","buf_ptr","prestat","fd_prestat_dir_name","path_ptr","path_len","prestat_dir_name","inner","pr_name","byteLength","ERRNO_NAMETOOLONG","fd_pwrite","nwritten_ptr","Ciovec","nwritten","nwritten_part","fd_read","fd_readdir","cookie","bufused_ptr","bufused","dirent","fd_readdir_single","head_length","head_bytes","ArrayBuffer","write_head_bytes","min","name_length","write_name_bytes","d_next","fd_renumber","to","fd_seek","whence","offset_out_ptr","offset_out","setBigInt64","fd_tell","offset_ptr","fd_write","path_create_directory","path","path_filestat_get","path_filestat_set_times","path_link","old_fd","old_flags","old_path_ptr","old_path_len","new_fd","new_path_ptr","new_path_len","old_path","new_path","inode_obj","path_lookup","path_open","dirflags","oflags","fd_flags","opened_fd_ptr","fd_obj","push","opened_fd","path_readlink","data_buf","path_remove_directory","path_rename","path_unlink","path_symlink","ERRNO_NOTSUP","path_unlink_file","poll_oneoff","in_","out","nsubscriptions","proc_exit","exit_code","proc_raise","sig","sched_yield","random_get","subarray","globalThis","SharedArrayBuffer","crypto","getRandomValues","random","sock_recv","ri_data","ri_flags","sock_send","si_data","si_flags","sock_shutdown","how","sock_accept"],"mappings":"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"}