{"version":3,"sources":["../src/fs_mem.ts"],"sourcesContent":["import { debug } from \"./debug.js\";\nimport * as wasi from \"./wasi_defs.js\";\nimport { Fd, Inode } from \"./fd.js\";\n\nexport class OpenFile extends Fd {\n  file: File;\n  file_pos: bigint = 0n;\n\n  constructor(file: File) {\n    super();\n    this.file = file;\n  }\n\n  fd_allocate(offset: bigint, len: bigint): number {\n    if (this.file.size > offset + len) {\n      // already big enough\n    } else {\n      // extend\n      const new_data = new Uint8Array(Number(offset + len));\n      new_data.set(this.file.data, 0);\n      this.file.data = new_data;\n    }\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  fd_fdstat_get(): { ret: number; fdstat: wasi.Fdstat | null } {\n    return { ret: 0, fdstat: new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE, 0) };\n  }\n\n  fd_filestat_set_size(size: bigint): number {\n    if (this.file.size > size) {\n      // truncate\n      this.file.data = new Uint8Array(\n        this.file.data.buffer.slice(0, Number(size)),\n      );\n    } else {\n      // extend\n      const new_data = new Uint8Array(Number(size));\n      new_data.set(this.file.data, 0);\n      this.file.data = new_data;\n    }\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  fd_read(size: number): { ret: number; data: Uint8Array } {\n    const slice = this.file.data.slice(\n      Number(this.file_pos),\n      Number(this.file_pos + BigInt(size)),\n    );\n    this.file_pos += BigInt(slice.length);\n    return { ret: 0, data: slice };\n  }\n\n  fd_pread(size: number, offset: bigint): { ret: number; data: Uint8Array } {\n    const slice = this.file.data.slice(\n      Number(offset),\n      Number(offset + BigInt(size)),\n    );\n    return { ret: 0, data: slice };\n  }\n\n  fd_seek(offset: bigint, whence: number): { ret: number; offset: bigint } {\n    let calculated_offset: bigint;\n    switch (whence) {\n      case wasi.WHENCE_SET:\n        calculated_offset = offset;\n        break;\n      case wasi.WHENCE_CUR:\n        calculated_offset = this.file_pos + offset;\n        break;\n      case wasi.WHENCE_END:\n        calculated_offset = BigInt(this.file.data.byteLength) + offset;\n        break;\n      default:\n        return { ret: wasi.ERRNO_INVAL, offset: 0n };\n    }\n\n    if (calculated_offset < 0) {\n      return { ret: wasi.ERRNO_INVAL, offset: 0n };\n    }\n\n    this.file_pos = calculated_offset;\n    return { ret: 0, offset: this.file_pos };\n  }\n\n  fd_tell(): { ret: number; offset: bigint } {\n    return { ret: 0, offset: this.file_pos };\n  }\n\n  fd_write(data: Uint8Array): { ret: number; nwritten: number } {\n    if (this.file.readonly) return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n\n    if (this.file_pos + BigInt(data.byteLength) > this.file.size) {\n      const old = this.file.data;\n      this.file.data = new Uint8Array(\n        Number(this.file_pos + BigInt(data.byteLength)),\n      );\n      this.file.data.set(old);\n    }\n\n    this.file.data.set(data, Number(this.file_pos));\n    this.file_pos += BigInt(data.byteLength);\n    return { ret: 0, nwritten: data.byteLength };\n  }\n\n  fd_pwrite(data: Uint8Array, offset: bigint) {\n    if (this.file.readonly) return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n\n    if (offset + BigInt(data.byteLength) > this.file.size) {\n      const old = this.file.data;\n      this.file.data = new Uint8Array(Number(offset + BigInt(data.byteLength)));\n      this.file.data.set(old);\n    }\n\n    this.file.data.set(data, Number(offset));\n    return { ret: 0, nwritten: data.byteLength };\n  }\n\n  fd_filestat_get(): { ret: number; filestat: wasi.Filestat } {\n    return { ret: 0, filestat: this.file.stat() };\n  }\n}\n\nexport class OpenDirectory extends Fd {\n  dir: Directory;\n\n  constructor(dir: Directory) {\n    super();\n    this.dir = dir;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_seek(offset: bigint, whence: number): { ret: number; offset: bigint } {\n    return { ret: wasi.ERRNO_BADF, offset: 0n };\n  }\n\n  fd_tell(): { ret: number; offset: bigint } {\n    return { ret: wasi.ERRNO_BADF, offset: 0n };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_allocate(offset: bigint, len: bigint): number {\n    return wasi.ERRNO_BADF;\n  }\n\n  fd_fdstat_get(): { ret: number; fdstat: wasi.Fdstat | null } {\n    return { ret: 0, fdstat: new wasi.Fdstat(wasi.FILETYPE_DIRECTORY, 0) };\n  }\n\n  fd_readdir_single(cookie: bigint): {\n    ret: number;\n    dirent: wasi.Dirent | null;\n  } {\n    if (debug.enabled) {\n      debug.log(\"readdir_single\", cookie);\n      debug.log(cookie, this.dir.contents.keys());\n    }\n\n    if (cookie == 0n) {\n      return {\n        ret: wasi.ERRNO_SUCCESS,\n        dirent: new wasi.Dirent(1n, this.dir.ino, \".\", wasi.FILETYPE_DIRECTORY),\n      };\n    } else if (cookie == 1n) {\n      return {\n        ret: wasi.ERRNO_SUCCESS,\n        dirent: new wasi.Dirent(\n          2n,\n          this.dir.parent_ino(),\n          \"..\",\n          wasi.FILETYPE_DIRECTORY,\n        ),\n      };\n    }\n\n    if (cookie >= BigInt(this.dir.contents.size) + 2n) {\n      return { ret: 0, dirent: null };\n    }\n\n    const [name, entry] = Array.from(this.dir.contents.entries())[\n      Number(cookie - 2n)\n    ];\n\n    return {\n      ret: 0,\n      dirent: new wasi.Dirent(\n        cookie + 1n,\n        entry.ino,\n        name,\n        entry.stat().filetype,\n      ),\n    };\n  }\n\n  path_filestat_get(\n    flags: number,\n    path_str: string,\n  ): { ret: number; filestat: wasi.Filestat | null } {\n    const { ret: path_err, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_err, filestat: null };\n    }\n\n    const { ret, entry } = this.dir.get_entry_for_path(path);\n    if (entry == null) {\n      return { ret, filestat: null };\n    }\n\n    return { ret: 0, filestat: entry.stat() };\n  }\n\n  path_lookup(\n    path_str: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dirflags: number,\n  ): { ret: number; inode_obj: Inode | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, inode_obj: null };\n    }\n\n    const { ret, entry } = this.dir.get_entry_for_path(path);\n    if (entry == null) {\n      return { ret, inode_obj: null };\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, inode_obj: entry };\n  }\n\n  path_open(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dirflags: number,\n    path_str: string,\n    oflags: number,\n    fs_rights_base: bigint,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fs_rights_inheriting: bigint,\n    fd_flags: number,\n  ): { ret: number; fd_obj: Fd | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, fd_obj: null };\n    }\n\n    // eslint-disable-next-line prefer-const\n    let { ret, entry } = this.dir.get_entry_for_path(path);\n    if (entry == null) {\n      if (ret != wasi.ERRNO_NOENT) {\n        return { ret, fd_obj: null };\n      }\n      if ((oflags & wasi.OFLAGS_CREAT) == wasi.OFLAGS_CREAT) {\n        // doesn't exist, but shall be created\n        const { ret, entry: new_entry } = this.dir.create_entry_for_path(\n          path_str,\n          (oflags & wasi.OFLAGS_DIRECTORY) == wasi.OFLAGS_DIRECTORY,\n        );\n        if (new_entry == null) {\n          return { ret, fd_obj: null };\n        }\n        entry = new_entry;\n      } else {\n        // doesn't exist, no such file\n        return { ret: wasi.ERRNO_NOENT, fd_obj: null };\n      }\n    } else if ((oflags & wasi.OFLAGS_EXCL) == wasi.OFLAGS_EXCL) {\n      // was supposed to be created exclusively, but exists already\n      return { ret: wasi.ERRNO_EXIST, fd_obj: null };\n    }\n    if (\n      (oflags & wasi.OFLAGS_DIRECTORY) == wasi.OFLAGS_DIRECTORY &&\n      entry.stat().filetype !== wasi.FILETYPE_DIRECTORY\n    ) {\n      // expected a directory but the file is not a directory\n      return { ret: wasi.ERRNO_NOTDIR, fd_obj: null };\n    }\n    return entry.path_open(oflags, fs_rights_base, fd_flags);\n  }\n\n  path_create_directory(path: string): number {\n    return this.path_open(\n      0,\n      path,\n      wasi.OFLAGS_CREAT | wasi.OFLAGS_DIRECTORY,\n      0n,\n      0n,\n      0,\n    ).ret;\n  }\n\n  path_link(path_str: string, inode: Inode, allow_dir: boolean): number {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return path_ret;\n    }\n\n    if (path.is_dir) {\n      return wasi.ERRNO_NOENT;\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, true);\n    if (parent_entry == null || filename == null) {\n      return parent_ret;\n    }\n\n    if (entry != null) {\n      const source_is_dir = inode.stat().filetype == wasi.FILETYPE_DIRECTORY;\n      const target_is_dir = entry.stat().filetype == wasi.FILETYPE_DIRECTORY;\n      if (source_is_dir && target_is_dir) {\n        if (allow_dir && entry instanceof Directory) {\n          if (entry.contents.size == 0) {\n            // Allow overwriting empty directories\n          } else {\n            return wasi.ERRNO_NOTEMPTY;\n          }\n        } else {\n          return wasi.ERRNO_EXIST;\n        }\n      } else if (source_is_dir && !target_is_dir) {\n        return wasi.ERRNO_NOTDIR;\n      } else if (!source_is_dir && target_is_dir) {\n        return wasi.ERRNO_ISDIR;\n      } else if (\n        inode.stat().filetype == wasi.FILETYPE_REGULAR_FILE &&\n        entry.stat().filetype == wasi.FILETYPE_REGULAR_FILE\n      ) {\n        // Overwriting regular files is fine\n      } else {\n        return wasi.ERRNO_EXIST;\n      }\n    }\n\n    if (!allow_dir && inode.stat().filetype == wasi.FILETYPE_DIRECTORY) {\n      return wasi.ERRNO_PERM;\n    }\n\n    parent_entry.contents.set(filename, inode);\n\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  path_unlink(path_str: string): { ret: number; inode_obj: Inode | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, inode_obj: null };\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, true);\n    if (parent_entry == null || filename == null) {\n      return { ret: parent_ret, inode_obj: null };\n    }\n\n    if (entry == null) {\n      return { ret: wasi.ERRNO_NOENT, inode_obj: null };\n    }\n\n    parent_entry.contents.delete(filename);\n\n    return { ret: wasi.ERRNO_SUCCESS, inode_obj: entry };\n  }\n\n  path_unlink_file(path_str: string): number {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return path_ret;\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, false);\n    if (parent_entry == null || filename == null || entry == null) {\n      return parent_ret;\n    }\n    if (entry.stat().filetype === wasi.FILETYPE_DIRECTORY) {\n      return wasi.ERRNO_ISDIR;\n    }\n    parent_entry.contents.delete(filename);\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  path_remove_directory(path_str: string): number {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return path_ret;\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, false);\n    if (parent_entry == null || filename == null || entry == null) {\n      return parent_ret;\n    }\n\n    if (\n      !(entry instanceof Directory) ||\n      entry.stat().filetype !== wasi.FILETYPE_DIRECTORY\n    ) {\n      return wasi.ERRNO_NOTDIR;\n    }\n    if (entry.contents.size !== 0) {\n      return wasi.ERRNO_NOTEMPTY;\n    }\n    if (!parent_entry.contents.delete(filename)) {\n      return wasi.ERRNO_NOENT;\n    }\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  fd_filestat_get(): { ret: number; filestat: wasi.Filestat } {\n    return { ret: 0, filestat: this.dir.stat() };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_filestat_set_size(size: bigint): number {\n    return wasi.ERRNO_BADF;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_read(size: number): { ret: number; data: Uint8Array } {\n    return { ret: wasi.ERRNO_BADF, data: new Uint8Array() };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_pread(size: number, offset: bigint): { ret: number; data: Uint8Array } {\n    return { ret: wasi.ERRNO_BADF, data: new Uint8Array() };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_write(data: Uint8Array): { ret: number; nwritten: number } {\n    return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n  }\n\n  fd_pwrite(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    data: Uint8Array,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    offset: bigint,\n  ): { ret: number; nwritten: number } {\n    return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n  }\n}\n\nexport class PreopenDirectory extends OpenDirectory {\n  prestat_name: string;\n\n  constructor(name: string, contents: Map<string, Inode>) {\n    super(new Directory(contents));\n    this.prestat_name = name;\n  }\n\n  fd_prestat_get(): { ret: number; prestat: wasi.Prestat | null } {\n    return {\n      ret: 0,\n      prestat: wasi.Prestat.dir(this.prestat_name),\n    };\n  }\n}\n\nexport class File extends Inode {\n  data: Uint8Array;\n  readonly: boolean;\n\n  constructor(\n    data: ArrayBuffer | SharedArrayBuffer | Uint8Array | Array<number>,\n    options?: Partial<{\n      readonly: boolean;\n    }>,\n  ) {\n    super();\n    this.data = new Uint8Array(data);\n    this.readonly = !!options?.readonly;\n  }\n\n  path_open(oflags: number, fs_rights_base: bigint, fd_flags: number) {\n    if (\n      this.readonly &&\n      (fs_rights_base & BigInt(wasi.RIGHTS_FD_WRITE)) ==\n        BigInt(wasi.RIGHTS_FD_WRITE)\n    ) {\n      // no write permission to file\n      return { ret: wasi.ERRNO_PERM, fd_obj: null };\n    }\n\n    if ((oflags & wasi.OFLAGS_TRUNC) == wasi.OFLAGS_TRUNC) {\n      if (this.readonly) return { ret: wasi.ERRNO_PERM, fd_obj: null };\n      this.data = new Uint8Array([]);\n    }\n\n    const file = new OpenFile(this);\n    if (fd_flags & wasi.FDFLAGS_APPEND) file.fd_seek(0n, wasi.WHENCE_END);\n    return { ret: wasi.ERRNO_SUCCESS, fd_obj: file };\n  }\n\n  get size(): bigint {\n    return BigInt(this.data.byteLength);\n  }\n\n  stat(): wasi.Filestat {\n    return new wasi.Filestat(this.ino, wasi.FILETYPE_REGULAR_FILE, this.size);\n  }\n}\n\nclass Path {\n  parts: string[] = [];\n  is_dir: boolean = false;\n\n  static from(path: string): { ret: number; path: Path | null } {\n    const self = new Path();\n    self.is_dir = path.endsWith(\"/\");\n\n    if (path.startsWith(\"/\")) {\n      return { ret: wasi.ERRNO_NOTCAPABLE, path: null };\n    }\n    if (path.includes(\"\\0\")) {\n      return { ret: wasi.ERRNO_INVAL, path: null };\n    }\n\n    for (const component of path.split(\"/\")) {\n      if (component === \"\" || component === \".\") {\n        continue;\n      }\n      if (component === \"..\") {\n        if (self.parts.pop() == undefined) {\n          return { ret: wasi.ERRNO_NOTCAPABLE, path: null };\n        }\n        continue;\n      }\n      self.parts.push(component);\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, path: self };\n  }\n\n  to_path_string(): string {\n    let s = this.parts.join(\"/\");\n    if (this.is_dir) {\n      s += \"/\";\n    }\n    return s;\n  }\n}\n\nexport class Directory extends Inode {\n  contents: Map<string, Inode>;\n  private parent: Directory | null = null;\n\n  constructor(contents: Map<string, Inode> | [string, Inode][]) {\n    super();\n    if (contents instanceof Array) {\n      this.contents = new Map(contents);\n    } else {\n      this.contents = contents;\n    }\n\n    for (const entry of this.contents.values()) {\n      if (entry instanceof Directory) {\n        entry.parent = this;\n      }\n    }\n  }\n\n  parent_ino(): bigint {\n    if (this.parent == null) {\n      return Inode.root_ino();\n    }\n    return this.parent.ino;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  path_open(oflags: number, fs_rights_base: bigint, fd_flags: number) {\n    return { ret: wasi.ERRNO_SUCCESS, fd_obj: new OpenDirectory(this) };\n  }\n\n  stat(): wasi.Filestat {\n    return new wasi.Filestat(this.ino, wasi.FILETYPE_DIRECTORY, 0n);\n  }\n\n  get_entry_for_path(path: Path): { ret: number; entry: Inode | null } {\n    let entry: Inode = this;\n    for (const component of path.parts) {\n      if (!(entry instanceof Directory)) {\n        return { ret: wasi.ERRNO_NOTDIR, entry: null };\n      }\n      const child = entry.contents.get(component);\n      if (child !== undefined) {\n        entry = child;\n      } else {\n        debug.log(component);\n        return { ret: wasi.ERRNO_NOENT, entry: null };\n      }\n    }\n\n    if (path.is_dir) {\n      if (entry.stat().filetype != wasi.FILETYPE_DIRECTORY) {\n        return { ret: wasi.ERRNO_NOTDIR, entry: null };\n      }\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, entry };\n  }\n\n  get_parent_dir_and_entry_for_path(\n    path: Path,\n    allow_undefined: boolean,\n  ): {\n    ret: number;\n    parent_entry: Directory | null;\n    filename: string | null;\n    entry: Inode | null;\n  } {\n    const filename = path.parts.pop();\n\n    if (filename === undefined) {\n      return {\n        ret: wasi.ERRNO_INVAL,\n        parent_entry: null,\n        filename: null,\n        entry: null,\n      };\n    }\n\n    const { ret: entry_ret, entry: parent_entry } =\n      this.get_entry_for_path(path);\n    if (parent_entry == null) {\n      return {\n        ret: entry_ret,\n        parent_entry: null,\n        filename: null,\n        entry: null,\n      };\n    }\n    if (!(parent_entry instanceof Directory)) {\n      return {\n        ret: wasi.ERRNO_NOTDIR,\n        parent_entry: null,\n        filename: null,\n        entry: null,\n      };\n    }\n    const entry: Inode | undefined | null = parent_entry.contents.get(filename);\n    if (entry === undefined) {\n      if (!allow_undefined) {\n        return {\n          ret: wasi.ERRNO_NOENT,\n          parent_entry: null,\n          filename: null,\n          entry: null,\n        };\n      } else {\n        return { ret: wasi.ERRNO_SUCCESS, parent_entry, filename, entry: null };\n      }\n    }\n\n    if (path.is_dir) {\n      if (entry.stat().filetype != wasi.FILETYPE_DIRECTORY) {\n        return {\n          ret: wasi.ERRNO_NOTDIR,\n          parent_entry: null,\n          filename: null,\n          entry: null,\n        };\n      }\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, parent_entry, filename, entry };\n  }\n\n  create_entry_for_path(\n    path_str: string,\n    is_dir: boolean,\n  ): { ret: number; entry: Inode | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, entry: null };\n    }\n\n    let {\n      // eslint-disable-next-line prefer-const\n      ret: parent_ret,\n      // eslint-disable-next-line prefer-const\n      parent_entry,\n      // eslint-disable-next-line prefer-const\n      filename,\n      entry,\n    } = this.get_parent_dir_and_entry_for_path(path, true);\n    if (parent_entry == null || filename == null) {\n      return { ret: parent_ret, entry: null };\n    }\n\n    if (entry != null) {\n      return { ret: wasi.ERRNO_EXIST, entry: null };\n    }\n\n    debug.log(\"create\", path);\n    let new_child;\n    if (!is_dir) {\n      new_child = new File(new ArrayBuffer(0));\n    } else {\n      new_child = new Directory(new Map());\n    }\n    parent_entry.contents.set(filename, new_child);\n    entry = new_child;\n\n    return { ret: wasi.ERRNO_SUCCESS, entry };\n  }\n}\n\nexport class ConsoleStdout extends Fd {\n  private ino: bigint;\n  write: (buffer: Uint8Array) => void;\n\n  constructor(write: (buffer: Uint8Array) => void) {\n    super();\n    this.ino = Inode.issue_ino();\n    this.write = write;\n  }\n\n  fd_filestat_get(): { ret: number; filestat: wasi.Filestat } {\n    const filestat = new wasi.Filestat(\n      this.ino,\n      wasi.FILETYPE_CHARACTER_DEVICE,\n      BigInt(0),\n    );\n    return { ret: 0, filestat };\n  }\n\n  fd_fdstat_get(): { ret: number; fdstat: wasi.Fdstat | null } {\n    const fdstat = new wasi.Fdstat(wasi.FILETYPE_CHARACTER_DEVICE, 0);\n    fdstat.fs_rights_base = BigInt(wasi.RIGHTS_FD_WRITE);\n    return { ret: 0, fdstat };\n  }\n\n  fd_write(data: Uint8Array): { ret: number; nwritten: number } {\n    this.write(data);\n    return { ret: 0, nwritten: data.byteLength };\n  }\n\n  static lineBuffered(write: (line: string) => void): ConsoleStdout {\n    const dec = new TextDecoder(\"utf-8\", { fatal: false });\n    let line_buf = \"\";\n    return new ConsoleStdout((buffer) => {\n      line_buf += dec.decode(buffer, { stream: true });\n      const lines = line_buf.split(\"\\n\");\n      for (const [i, line] of lines.entries()) {\n        if (i < lines.length - 1) {\n          write(line);\n        } else {\n          line_buf = line;\n        }\n      }\n    });\n  }\n}\n"],"names":["debug","wasi","Fd","Inode","OpenFile","fd_allocate","offset","len","file","size","new_data","Uint8Array","Number","set","data","ERRNO_SUCCESS","fd_fdstat_get","ret","fdstat","Fdstat","FILETYPE_REGULAR_FILE","fd_filestat_set_size","buffer","slice","fd_read","file_pos","BigInt","length","fd_pread","fd_seek","whence","calculated_offset","WHENCE_SET","WHENCE_CUR","WHENCE_END","byteLength","ERRNO_INVAL","fd_tell","fd_write","readonly","ERRNO_BADF","nwritten","old","fd_pwrite","fd_filestat_get","filestat","stat","constructor","OpenDirectory","FILETYPE_DIRECTORY","fd_readdir_single","cookie","enabled","log","dir","contents","keys","dirent","Dirent","ino","parent_ino","name","entry","Array","from","entries","filetype","path_filestat_get","flags","path_str","path_err","path","Path","get_entry_for_path","path_lookup","dirflags","path_ret","inode_obj","path_open","oflags","fs_rights_base","fs_rights_inheriting","fd_flags","fd_obj","ERRNO_NOENT","OFLAGS_CREAT","new_entry","create_entry_for_path","OFLAGS_DIRECTORY","OFLAGS_EXCL","ERRNO_EXIST","ERRNO_NOTDIR","path_create_directory","path_link","inode","allow_dir","is_dir","parent_ret","parent_entry","filename","get_parent_dir_and_entry_for_path","source_is_dir","target_is_dir","Directory","ERRNO_NOTEMPTY","ERRNO_ISDIR","ERRNO_PERM","path_unlink","delete","path_unlink_file","path_remove_directory","PreopenDirectory","fd_prestat_get","prestat","Prestat","prestat_name","File","RIGHTS_FD_WRITE","OFLAGS_TRUNC","FDFLAGS_APPEND","Filestat","options","self","endsWith","startsWith","ERRNO_NOTCAPABLE","includes","component","split","parts","pop","undefined","push","to_path_string","s","join","parent","root_ino","child","get","allow_undefined","entry_ret","new_child","ArrayBuffer","Map","values","ConsoleStdout","FILETYPE_CHARACTER_DEVICE","write","lineBuffered","dec","TextDecoder","fatal","line_buf","decode","stream","lines","i","line","issue_ino"],"mappings":"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"}